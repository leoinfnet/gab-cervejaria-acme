services:
  db:
    image: postgres:15
    container_name: sonar-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonarpass
      POSTGRES_DB: sonarqube
    volumes:
      - sonar_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonarpass
      # Opcional (ajuste conforme sua mÃ¡quina):
      SONAR_WEB_JAVAOPTS: >
        -Xms512m -Xmx2048m
        -XX:+HeapDumpOnOutOfMemoryError
        -Djava.net.preferIPv4Stack=true
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc: 4096
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9000/api/system/health | grep -q '\"health\":\"GREEN\"'"]
      interval: 15s
      timeout: 5s
      retries: 20

volumes:
  sonar_db:
  sonar_data:
  sonar_extensions:
  sonar_logs: